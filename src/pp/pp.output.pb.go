// Code generated by protoc-gen-go.
// source: pp.output.proto
// DO NOT EDIT!

package pp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetOutputReq struct {
	Hash             *string `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetOutputReq) Reset()                    { *m = GetOutputReq{} }
func (m *GetOutputReq) String() string            { return proto.CompactTextString(m) }
func (*GetOutputReq) ProtoMessage()               {}
func (*GetOutputReq) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *GetOutputReq) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

type GetOutputRes struct {
	Result           *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Output           *Output `protobuf:"bytes,10,opt,name=output" json:"output,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetOutputRes) Reset()                    { *m = GetOutputRes{} }
func (m *GetOutputRes) String() string            { return proto.CompactTextString(m) }
func (*GetOutputRes) ProtoMessage()               {}
func (*GetOutputRes) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *GetOutputRes) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetOutputRes) GetOutput() *Output {
	if m != nil {
		return m.Output
	}
	return nil
}

type Output struct {
	Time             *uint64 `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	SrcBlockSeq      *uint64 `protobuf:"varint,2,opt,name=src_block_seq" json:"src_block_seq,omitempty"`
	SrcTx            *string `protobuf:"bytes,3,opt,name=src_tx" json:"src_tx,omitempty"`
	OwnerAddress     *string `protobuf:"bytes,4,opt,name=owner_address" json:"owner_address,omitempty"`
	Coins            *uint64 `protobuf:"varint,5,opt,name=coins" json:"coins,omitempty"`
	Hours            *uint64 `protobuf:"varint,6,opt,name=hours" json:"hours,omitempty"`
	SpentBlockSeq    *uint64 `protobuf:"varint,7,opt,name=spent_block_seq" json:"spent_block_seq,omitempty"`
	SpentTx          *string `protobuf:"bytes,8,opt,name=spent_tx" json:"spent_tx,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Output) Reset()                    { *m = Output{} }
func (m *Output) String() string            { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()               {}
func (*Output) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

func (m *Output) GetTime() uint64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Output) GetSrcBlockSeq() uint64 {
	if m != nil && m.SrcBlockSeq != nil {
		return *m.SrcBlockSeq
	}
	return 0
}

func (m *Output) GetSrcTx() string {
	if m != nil && m.SrcTx != nil {
		return *m.SrcTx
	}
	return ""
}

func (m *Output) GetOwnerAddress() string {
	if m != nil && m.OwnerAddress != nil {
		return *m.OwnerAddress
	}
	return ""
}

func (m *Output) GetCoins() uint64 {
	if m != nil && m.Coins != nil {
		return *m.Coins
	}
	return 0
}

func (m *Output) GetHours() uint64 {
	if m != nil && m.Hours != nil {
		return *m.Hours
	}
	return 0
}

func (m *Output) GetSpentBlockSeq() uint64 {
	if m != nil && m.SpentBlockSeq != nil {
		return *m.SpentBlockSeq
	}
	return 0
}

func (m *Output) GetSpentTx() string {
	if m != nil && m.SpentTx != nil {
		return *m.SpentTx
	}
	return ""
}

func init() {
	proto.RegisterType((*GetOutputReq)(nil), "pp.GetOutputReq")
	proto.RegisterType((*GetOutputRes)(nil), "pp.GetOutputRes")
	proto.RegisterType((*Output)(nil), "pp.Output")
}

func init() { proto.RegisterFile("pp.output.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x8e, 0x41, 0x4e, 0xc3, 0x40,
	0x0c, 0x45, 0x95, 0x92, 0x84, 0x62, 0x1a, 0x8a, 0x22, 0x21, 0xac, 0x8a, 0x05, 0xca, 0x8a, 0x55,
	0x16, 0x1c, 0x02, 0x96, 0x48, 0xbd, 0x40, 0x54, 0x52, 0x4b, 0xa9, 0x68, 0x62, 0x77, 0xec, 0x88,
	0x5e, 0x86, 0xbb, 0xa2, 0xf1, 0x2c, 0xa0, 0xbb, 0x99, 0xf7, 0xec, 0xff, 0x0d, 0x6b, 0x91, 0x96,
	0x67, 0x93, 0xd9, 0x5a, 0x09, 0x6c, 0x5c, 0x2f, 0x44, 0x36, 0x11, 0xf6, 0x3c, 0x8e, 0x3c, 0x25,
	0xd8, 0x3c, 0xc1, 0xea, 0x9d, 0xec, 0xc3, 0xe7, 0xb6, 0x74, 0xaa, 0x57, 0x90, 0x0f, 0x3b, 0x1d,
	0x30, 0x7b, 0xce, 0x5e, 0x6e, 0x9a, 0xb7, 0x0b, 0xab, 0xf5, 0x06, 0xca, 0x40, 0x3a, 0x1f, 0xcd,
	0xfd, 0xed, 0x2b, 0xb4, 0x22, 0xed, 0xd6, 0x49, 0x74, 0xa9, 0x0e, 0xe1, 0xcf, 0xa5, 0xd5, 0xe6,
	0x27, 0x83, 0x32, 0x3d, 0x63, 0x81, 0x1d, 0x46, 0xf2, 0x80, 0xbc, 0x7e, 0x80, 0x4a, 0x43, 0xdf,
	0x7d, 0x1e, 0xb9, 0xff, 0xea, 0x94, 0x4e, 0xb8, 0x70, 0x7c, 0x07, 0x65, 0xc4, 0x76, 0xc6, 0xab,
	0x78, 0x47, 0x1c, 0xe3, 0xef, 0x89, 0x42, 0xb7, 0xdb, 0xef, 0x03, 0xa9, 0x62, 0xee, 0xb8, 0x82,
	0xa2, 0xe7, 0xc3, 0xa4, 0x58, 0xf8, 0x56, 0x05, 0xc5, 0xc0, 0x73, 0x50, 0x2c, 0xfd, 0xfb, 0x08,
	0x6b, 0x15, 0x9a, 0xec, 0x5f, 0xfa, 0xb5, 0x8b, 0x7b, 0x58, 0x26, 0x61, 0x67, 0x5c, 0xc6, 0xa0,
	0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x13, 0xa5, 0x9f, 0x2c, 0x01, 0x00, 0x00,
}
